Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\wisseldecoder.X.production.sym \
  --cmf=dist/default/production\wisseldecoder.X.production.cmf -z -Q16F876A \
  -oC:\Users\Rian\AppData\Local\Temp\sgg4x2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/wisseldecoder.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\Rian\AppData\Local\Temp\sgg4xb.o \
  dist/default/production\wisseldecoder.X.production.o 

Object code version is 3.11

Machine type is 16F876A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Rian\AppData\Local\Temp\sgg4xb.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
dist/default/production\wisseldecoder.X.production.o
                cinit                                 F        F       16        8       0
                intentry                              4        4        8        8       0
                text18                               25       25       70        8       0
                text17                              1F9      1F9        4        8       0
                text16                              1F5      1F5        4        8       0
                text15                              1B3      1B3        F        8       0
                text14                              166      166       20        8       0
                text13                              141      141       25        8       0
                text12                              1D0      1D0        B        8       0
                text11                              1E4      1E4        5        8       0
                text10                               95       95       5F        8       0
                text9                               1DB      1DB        9        8       0
                text8                               1FF      1FF        2        8       0
                text7                               1FD      1FD        2        8       0
                text6                               1F1      1F1        4        8       0
                text5                               1ED      1ED        4        8       0
                text4                               1E9      1E9        4        8       0
                text3                               1A4      1A4        F        8       0
                text2                               1C2      1C2        E        8       0
                text1                               186      186       1E        8       0
                maintext                             F4       F4       4D        8       0
                cstackBANK0                          20       20       1E       20       1
                cstackCOMMON                         70       70        8       70       1
                bssBANK0                             3E       3E        A       20       1
                bssCOMMON                            78       78        6       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       16         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text18                               25       25       70         0
                text17                              1F9      1F9        4         0
                text16                              1F5      1F5        4         0
                text15                              1B3      1B3        F         0
                text14                              166      166       20         0
                text13                              141      141       25         0
                text12                              1D0      1D0        B         0
                text11                              1E4      1E4        5         0
                text10                               95       95       5F         0
                text9                               1DB      1DB        9         0
                text8                               1FF      1FF        2         0
                text7                               1FD      1FD        2         0
                text6                               1F1      1F1        4         0
                text5                               1ED      1ED        4         0
                text4                               1E9      1E9        4         0
                text3                               1A4      1A4        F         0
                text2                               1C2      1C2        E         0
                text1                               186      186       1E         0
                maintext                             F4       F4       4D         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        6         1

        CLASS   BANK0          
                cstackBANK0                          20       20       1E         1
                bssBANK0                             3E       3E        A         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0001FD  000201         8       0  CODE        2
                cstackBANK0                    000020  000028  000048        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            048-06F            28           1
        BANK1            0A0-0EF            50           1
        BANK2            110-16F            60           1
        BANK3            190-1EF            60           1
        CODE             003-003             1           2
                         201-1FFF           800
        CONFIG           2007-2007             1           2
        CONST            003-003             1           2
                         201-1FFF           100
        EEDATA           2100-21FF           100           2
        ENTRY            003-003             1           2
                         201-1FFF           100
        IDLOC            2000-2003             4           2
        RAM              048-06F            28           1
                         0A0-0EF            50
                         110-16F            60
                         190-1EF            60
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-10F            10           1
        SFR3             180-18F            10           1
        STACK            110-16F            60           1
        STRCODE          003-003             1           2
                         201-1FFF          1DFF
        STRING           003-003             1           2
                         201-1FFF           100

                                  Symbol Table

?_DCCisRawPacketValid                cstackBANK0  029
CCP2Init@mode                        cstackBANK0  020
DCCbitDecode@TMR1Value               cstackCOMMON 070
DCCgetAddress@ret                    cstackBANK0  028
DCCgetAddress@val                    cstackBANK0  024
DCCgetChecksum@ret                   cstackBANK0  022
DCCisRawPacketValid@expect           cstackBANK0  033
DCCisRawPacketValid@ret              cstackBANK0  038
_CCP2CONbits                         (abs)        01D
_CCP2IF                              (abs)        068
_CCP2Init                            text9        1DB
_DCCbitDecode                        text18       025
_DCCgetAddress                       text13       141
_DCCgetChecksum                      text12       1D0
_DCCgetData                          text11       1E4
_DCCisRawPacketValid                 text10       095
_DCCisRawPacketValid$307             cstackBANK0  037
_INTCONbits                          (abs)        00B
_PIE1bits                            (abs)        08C
_PIR1bits                            (abs)        00C
_PIR2bits                            (abs)        00D
_PORTA                               (abs)        005
_T1CONbits                           (abs)        010
_TMR1                                (abs)        00E
_TMR1H                               (abs)        00F
_TMR1L                               (abs)        00E
__Habs1                              abs1         000
__Hbank0                             bank0        000
__Hbank1                             bank1        000
__Hbank2                             bank2        000
__Hbank3                             bank3        000
__HbssBANK0                          bssBANK0     000
__HbssCOMMON                         bssCOMMON    000
__Hcinit                             cinit        025
__Hclrtext                           clrtext      000
__Hcode                              code         000
__Hcommon                            common       000
__HcstackBANK0                       cstackBANK0  000
__HcstackCOMMON                      cstackCOMMON 000
__Heeprom_data                       eeprom_data  000
__Hend_init                          end_init     00F
__Hfunctab                           functab      000
__Hinit                              init         00C
__Hintentry                          intentry     00C
__Hmaintext                          maintext     000
__Hpowerup                           powerup      000
__Hram                               ram          000
__Hreset_vec                         reset_vec    003
__Hsfr0                              sfr0         000
__Hsfr1                              sfr1         000
__Hsfr2                              sfr2         000
__Hsfr3                              sfr3         000
__Hspace_0                           (abs)        201
__Hspace_1                           (abs)        07E
__Hspace_2                           (abs)        000
__Hspace_3                           (abs)        000
__Hstack                             stack        000
__Hstrings                           strings      000
__Htext                              text         000
__Labs1                              abs1         000
__Lbank0                             bank0        000
__Lbank1                             bank1        000
__Lbank2                             bank2        000
__Lbank3                             bank3        000
__LbssBANK0                          bssBANK0     000
__LbssCOMMON                         bssCOMMON    000
__Lcinit                             cinit        00F
__Lclrtext                           clrtext      000
__Lcode                              code         000
__Lcommon                            common       000
__LcstackBANK0                       cstackBANK0  000
__LcstackCOMMON                      cstackCOMMON 000
__Leeprom_data                       eeprom_data  000
__Lend_init                          end_init     00C
__Lfunctab                           functab      000
__Linit                              init         00C
__Lintentry                          intentry     004
__Lmaintext                          maintext     000
__Lpowerup                           powerup      000
__Lram                               ram          000
__Lreset_vec                         reset_vec    000
__Lsfr0                              sfr0         000
__Lsfr1                              sfr1         000
__Lsfr2                              sfr2         000
__Lsfr3                              sfr3         000
__Lspace_0                           (abs)        000
__Lspace_1                           (abs)        000
__Lspace_2                           (abs)        000
__Lspace_3                           (abs)        000
__Lstack                             stack        000
__Lstrings                           strings      000
__Ltext                              text         000
__S0                                 (abs)        201
__S1                                 (abs)        07E
__S2                                 (abs)        000
__S3                                 (abs)        000
___int_sp                            stack        000
___latbits                           (abs)        002
___sp                                stack        000
___stackhi                           (abs)        000
___stacklo                           (abs)        000
__end_of_CCP2Init                    text9        1E4
__end_of_DCCbitDecode                text18       095
__end_of_DCCgetAddress               text13       166
__end_of_DCCgetChecksum              text12       1DB
__end_of_DCCgetData                  text11       1E9
__end_of_DCCisRawPacketValid         text10       0F4
__end_of__initialization             cinit        021
__end_of_disableTMR1Intterrupt       text5        1F1
__end_of_enableGlobalInterrupts      text8        201
__end_of_enablePeripheralInterrupts  text7        1FF
__end_of_enableTMR1Intterrupt        text4        1ED
__end_of_main                        maintext     141
__end_of_my_isr_routine              text14       186
__end_of_setup                       text1        1A4
__end_of_tmr1Init                    text2        1D0
__end_of_tmr1On                      text6        1F5
__end_of_tmr1Reload                  text3        1B3
__end_ofi1_disableTMR1Intterrupt     text17       1FD
__end_ofi1_enableTMR1Intterrupt      text16       1F9
__end_ofi1_tmr1Reload                text15       1C2
__initialization                     cinit        00F
__pbssBANK0                          bssBANK0     03E
__pbssCOMMON                         bssCOMMON    078
__pcstackBANK0                       cstackBANK0  020
__pcstackCOMMON                      cstackCOMMON 070
__pintentry                          intentry     004
__pmaintext                          maintext     0F4
__ptext1                             text1        186
__ptext10                            text10       095
__ptext11                            text11       1E4
__ptext12                            text12       1D0
__ptext13                            text13       141
__ptext14                            text14       166
__ptext15                            text15       1B3
__ptext16                            text16       1F5
__ptext17                            text17       1F9
__ptext18                            text18       025
__ptext2                             text2        1C2
__ptext3                             text3        1A4
__ptext4                             text4        1E9
__ptext5                             text5        1ED
__ptext6                             text6        1F1
__ptext7                             text7        1FD
__ptext8                             text8        1FF
__ptext9                             text9        1DB
__size_of_CCP2Init                   (abs)        000
__size_of_DCCbitDecode               (abs)        000
__size_of_DCCgetAddress              (abs)        000
__size_of_DCCgetChecksum             (abs)        000
__size_of_DCCgetData                 (abs)        000
__size_of_DCCisRawPacketValid        (abs)        000
__size_of_disableTMR1Intterrupt      (abs)        000
__size_of_enableGlobalInterrupts     (abs)        000
__size_of_enablePeripheralInterrupts (abs)        000
__size_of_enableTMR1Intterrupt       (abs)        000
__size_of_main                       (abs)        000
__size_of_my_isr_routine             (abs)        000
__size_of_setup                      (abs)        000
__size_of_tmr1Init                   (abs)        000
__size_of_tmr1On                     (abs)        000
__size_of_tmr1Reload                 (abs)        000
__size_ofi1_disableTMR1Intterrupt    (abs)        000
__size_ofi1_enableTMR1Intterrupt     (abs)        000
__size_ofi1_tmr1Reload               (abs)        000
_adres                               bssBANK0     047
_checksum                            bssBANK0     045
_data                                bssBANK0     046
_dccPacketAddress                    bssBANK0     043
_dccPacketData                       bssBANK0     044
_disableTMR1Intterrupt               text5        1ED
_enableGlobalInterrupts              text8        1FF
_enablePeripheralInterrupts          text7        1FD
_enableTMR1Intterrupt                text4        1E9
_main                                maintext     0F4
_my_isr_routine                      text14       166
_rawPacketHigh                       bssCOMMON    07C
_rawPacketLow                        bssCOMMON    078
_setup                               text1        186
_tmr1Init                            text2        1C2
_tmr1On                              text6        1F1
_tmr1Reload                          text3        1A4
_validRawPacket                      bssBANK0     03E
btemp                                (abs)        07E
end_of_initialization                cinit        021
i1_disableTMR1Intterrupt             text17       1F9
i1_enableTMR1Intterrupt              text16       1F5
i1_tmr1Reload                        text15       1B3
interrupt_function                   intentry     004
intlevel0                            functab      000
intlevel1                            functab      000
intlevel2                            functab      000
intlevel3                            functab      000
intlevel4                            functab      000
intlevel5                            functab      000
reset_vec                            reset_vec    000
saved_w                              (abs)        07E
start                                init         00C
start_initialization                 cinit        00F
wtemp0                               (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 41 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_DCCgetAddress
		_DCCgetChecksum
		_DCCgetData
		_DCCisRawPacketValid
		_setup
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 20 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_CCP2Init
		_disableTMR1Intterrupt
		_enableGlobalInterrupts
		_enablePeripheralInterrupts
		_tmr1Init
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _tmr1Init *****************
 Defined at:
		line 13 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_tmr1On
		_tmr1Reload
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _tmr1Reload *****************
 Defined at:
		line 19 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_disableTMR1Intterrupt
		_enableTMR1Intterrupt
 This function is called by:
		_tmr1Init
 This function uses a non-reentrant model


 *************** function _enableTMR1Intterrupt *****************
 Defined at:
		line 26 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_tmr1Reload
 This function uses a non-reentrant model


 *************** function _disableTMR1Intterrupt *****************
 Defined at:
		line 30 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
		_tmr1Reload
 This function uses a non-reentrant model


 *************** function _tmr1On *****************
 Defined at:
		line 43 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_tmr1Init
 This function uses a non-reentrant model


 *************** function _enablePeripheralInterrupts *****************
 Defined at:
		line 20 in file "interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _enableGlobalInterrupts *****************
 Defined at:
		line 11 in file "interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _CCP2Init *****************
 Defined at:
		line 17 in file "CCP2.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _DCCisRawPacketValid *****************
 Defined at:
		line 38 in file "DCC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  expect          4   19[BANK0 ] unsigned long 
  mask            4    0        unsigned long 
  ret             2   24[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    9[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      11       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      17       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_DCCgetAddress
		_DCCgetChecksum
		_DCCgetData
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DCCgetData *****************
 Defined at:
		line 58 in file "DCC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ret             1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
		_DCCisRawPacketValid
 This function uses a non-reentrant model


 *************** function _DCCgetChecksum *****************
 Defined at:
		line 52 in file "DCC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ret             1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
		_DCCisRawPacketValid
 This function uses a non-reentrant model


 *************** function _DCCgetAddress *****************
 Defined at:
		line 64 in file "DCC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  val             4    4[BANK0 ] unsigned long 
  ret             1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
		_DCCisRawPacketValid
 This function uses a non-reentrant model


 *************** function _my_isr_routine *****************
 Defined at:
		line 31 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_DCCbitDecode
		i1_tmr1Reload
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1_tmr1Reload *****************
 Defined at:
		line 19 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_disableTMR1Intterrupt
		i1_enableTMR1Intterrupt
 This function is called by:
		_my_isr_routine
 This function uses a non-reentrant model


 *************** function i1_enableTMR1Intterrupt *****************
 Defined at:
		line 26 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_tmr1Reload
 This function uses a non-reentrant model


 *************** function i1_disableTMR1Intterrupt *****************
 Defined at:
		line 30 in file "tmr1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_tmr1Reload
 This function uses a non-reentrant model


 *************** function _DCCbitDecode *****************
 Defined at:
		line 23 in file "DCC.c"
 Parameters:    Size  Location     Type
  TMR1Value       2    0[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_my_isr_routine
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
tmr1.c
		_tmr1On        		CODE           	01F1	0000	4
		_tmr1Init      		CODE           	01C2	0000	14
		_disableTMR1Intterrupt		CODE           	01ED	0000	4
		_enableTMR1Intterrupt		CODE           	01E9	0000	4
		_tmr1Reload    		CODE           	01A4	0000	15

tmr1.c estimated size: 41

interrupts.c
		_enableGlobalInterrupts		CODE           	01FF	0000	2
		_enablePeripheralInterrupts		CODE           	01FD	0000	2

interrupts.c estimated size: 4

DCC.c
		_DCCgetData    		CODE           	01E4	0000	5
		_DCCgetAddress 		CODE           	0141	0000	37
		_DCCbitDecode  		CODE           	0025	0000	112
		_DCCisRawPacketValid		CODE           	0095	0000	95
		_DCCgetChecksum		CODE           	01D0	0000	11

DCC.c estimated size: 260

shared
		i1_enableTMR1Intterrupt		CODE           	01F5	0000	4
		i1_disableTMR1Intterrupt		CODE           	01F9	0000	4
		__initialization		CODE           	000F	0000	18
		i1_tmr1Reload  		CODE           	01B3	0000	15

shared estimated size: 41

CCP2.c
		_CCP2Init      		CODE           	01DB	0000	9

CCP2.c estimated size: 9

main.c
		_main          		CODE           	00F4	0000	77
		_my_isr_routine		CODE           	0166	0000	32
		_setup         		CODE           	0186	0000	30

main.c estimated size: 139

